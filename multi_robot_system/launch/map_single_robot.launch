<launch>
    <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
    <arg name="robot_name" default="robot_0"/>

    <arg name="robot_x_pos" default=" 0.0"/>
    <arg name="robot_y_pos" default=" 0.0"/>
    <arg name="robot_z_pos" default=" 0.0"/>
    <arg name="robot_yaw" default=" 0.0"/>

    <group ns="$(arg robot_name)/map_merge">
        <param name="init_pose_x" value="$(arg robot_x_pos)"/>
        <param name="init_pose_y" value="$(arg robot_y_pos)"/>
        <param name="init_pose_z" value="$(arg robot_z_pos)"/>
        <param name="init_pose_yaw" value="$(arg robot_yaw)" />
    </group>

    <group ns = "$(arg robot_name)">
        <arg name="configuration_basename" default="turtlebot3_lds_2d.lua"/>
        <arg name="set_base_frame" default="$(arg robot_name)/base_footprint"/>
        <arg name="set_odom_frame" default="$(arg robot_name)/odom"/>
        <!-- <arg name="set_map_frame" default="$(arg robot_name)/map"/> -->
        <arg name="set_map_frame" default="/map"/>
        <node pkg="gmapping" type="slam_gmapping" name="turtlebot3_slam_gmapping" output="screen">
            <param name="base_frame" value="$(arg set_base_frame)"/>
            <param name="odom_frame" value="$(arg set_odom_frame)"/>
            <param name="map_frame" value="$(arg set_map_frame)"/>
            <rosparam command="load" file="$(find turtlebot3_slam)/config/gmapping_params.yaml" />
        </node>
    </group>

    <!-- <node pkg="tf" type="static_transform_publisher" name="world_to_$(arg robot_name)_tf_broadcaster" args="0 0 0 0 0 0 /map /$(arg robot_name)/map 100"/> -->

    <!-- <node pkg="tf" type="static_transform_publisher" name="local_to_$(arg robot_name)_tf_broadcaster" args="0 0 0 0 0 0 /$(arg robot_name)/map /$(arg robot_name)/odom 100"/> -->

</launch>