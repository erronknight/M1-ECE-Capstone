<launch>
    <!-- Arguments -->
    <arg name="robot_name" default="robot_0"/>
    <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>

    <arg name="cmd_vel_topic" default="$(arg robot_name)/cmd_vel" />
    <arg name="odom_topic" default="$(arg robot_name)/odom" />
    <arg name="move_forward_only" default="false"/>

    <!-- <arg name="laser_topic" default="$(arg robot_name)/laser/scan"/> -->

    <arg name="laser_topic" default="$(arg robot_name)/scan"/>
    <!-- <arg name="odom_frame_id" default="$(arg robot_name)_tf/odom"/>
    <arg name="base_frame_id" default="$(arg robot_name)_tf/base_footprint"/> -->
    <arg name="odom_frame_id" default="$(arg robot_name)/odom"/>
    <arg name="base_frame_id" default="$(arg robot_name)/base_footprint"/>
    <!-- <arg name="global_frame_id" default="$(arg robot_name)/map"/> -->
    <arg name="global_frame_id" default="/map"/>


    <!-- move_base -->
    <node pkg="move_base" type="move_base" respawn="false" name="$(arg robot_name)_move_base" output="screen">
        <param name="use_sim_time" value="true" />
        <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
        <rosparam file="$(find multi_robot_system)/param/common/costmap_common_params_burger_$(arg robot_name).yaml" command="load" ns="global_costmap" />
        <rosparam file="$(find multi_robot_system)/param/common/costmap_common_params_burger_$(arg robot_name).yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find multi_robot_system)/param/local/local_costmap_params_$(arg robot_name).yaml" command="load" />
        <rosparam file="$(find multi_robot_system)/param/global/global_costmap_params_$(arg robot_name).yaml" command="load" />
        <rosparam file="$(find turtlebot3_navigation)/param/move_base_params.yaml" command="load" />
        <rosparam file="$(find turtlebot3_navigation)/param/dwa_local_planner_params_$(arg model).yaml" command="load" />
        <rosparam file="$(find turtlebot3_navigation)/param/base_local_planner_params.yaml" command="load" />

        <remap from="base_scan" to="$(arg robot_name)/base_scan" />
        <param name="/move_base/global_costmap/static_map" value="false" />
        <param name="/move_base/global_costmap/robot_base_frame" value="$(arg robot_name)/base_footprint"/>
        <!-- <param name="/move_base/global_costmap/global_frame" value="$(arg robot_name)/map"/> -->
        <param name="/move_base/local_costmap/global_frame" value="$(arg robot_name)/odom"/>
        <param name="/move_base/local_costmap/robot_base_frame" value="$(arg robot_name)/base_footprint"/>

        <remap from="cmd_vel" to="$(arg cmd_vel_topic)"/>
        <remap from="odom" to="$(arg odom_topic)"/>
        <param name="DWAPlannerROS/min_vel_x" value="0.0" if="$(arg move_forward_only)" />

        <remap from="scan" to="$(arg laser_topic)"/>
        <remap from="map" to="/map" />
        <remap from="/move_base_simple/goal" to="/$(arg robot_name)/move_base_simple/goal" />

        <remap from="/move_base/global_costmap/costmap" to="/$(arg robot_name)/move_base/global_costmap/costmap" />
        <remap from="/move_base/global_costmap/costmap_updates" to="/$(arg robot_name)/move_base/global_costmap/costmap_updates" />
        <remap from="/move_base/local_costmap/costmap" to="/$(arg robot_name)/move_base/local_costmap/costmap" />
        <remap from="/move_base/local_costmap/costmap_updates" to="/$(arg robot_name)/move_base/local_costmap/costmap_updates" />
        <remap from="/move_base/local_costmap/footprint" to="/$(arg robot_name)/move_base/local_costmap/footprint" />

        <remap from="/move_base/cancel" to="/$(arg robot_name)/move_base/cancel" />
        <remap from="/move_base/current_goal" to="/$(arg robot_name)/move_base/current_goal" />
        <remap from="/move_base/feedback" to="/$(arg robot_name)/move_base/feedback" />
        <remap from="/move_base/global_costmap/footprint" to="/$(arg robot_name)/move_base/global_costmap/footprint" />
        <remap from="/move_base/global_costmap/inflation_layer/parameter_descriptions" to="/$(arg robot_name)/move_base/global_costmap/inflation_layer/parameter_descriptions" />
        <remap from="/move_base/global_costmap/inflation_layer/parameter_updates" to="/$(arg robot_name)/move_base/global_costmap/inflation_layer/parameter_updates" />
        <remap from="/move_base/global_costmap/obstacle_layer/clearing_endpoints" to="/$(arg robot_name)/move_base/global_costmap/obstacle_layer/clearing_endpoints" />
        <remap from="/move_base/global_costmap/obstacle_layer/parameter_descriptions" to="/$(arg robot_name)/move_base/global_costmap/obstacle_layer/parameter_descriptions" />
        <remap from="/move_base/global_costmap/obstacle_layer/parameter_updates" to="/$(arg robot_name)/move_base/global_costmap/obstacle_layer/parameter_updates" />
        <remap from="/move_base/global_costmap/parameter_descriptions" to="/$(arg robot_name)/move_base/global_costmap/parameter_descriptions" />
        <remap from="/move_base/global_costmap/parameter_updates" to="/$(arg robot_name)/move_base/global_costmap/parameter_updates" />
        <remap from="/move_base/global_costmap/static_layer/parameter_descriptions" to="/$(arg robot_name)/move_base/global_costmap/static_layer/parameter_descriptions" />
        <remap from="/move_base/global_costmap/static_layer/parameter_updates" to="/$(arg robot_name)/move_base/global_costmap/static_layer/parameter_updates" />
        <remap from="/move_base/goal" to="/$(arg robot_name)/move_base/goal" />
        <remap from="/move_base/local_costmap/obstacle_layer/parameter_descriptions" to="/$(arg robot_name)/move_base/local_costmap/obstacle_layer/parameter_descriptions" />
        <remap from="/move_base/local_costmap/obstacle_layer/parameter_updates" to="/$(arg robot_name)/move_base/local_costmap/obstacle_layer/parameter_updates" />
        <remap from="/move_base/local_costmap/parameter_descriptions" to="/$(arg robot_name)/move_base/local_costmap/parameter_descriptions" />
        <remap from="/move_base/local_costmap/parameter_updates" to="/$(arg robot_name)/move_base/local_costmap/parameter_updates" />
        <remap from="/move_base/local_costmap/static_layer/parameter_descriptions" to="/$(arg robot_name)/move_base/local_costmap/static_layer/parameter_descriptions" />
        <remap from="/move_base/local_costmap/static_layer/parameter_updates" to="/$(arg robot_name)/move_base/local_costmap/static_layer/parameter_updates" />
        <remap from="/move_base/parameter_descriptions" to="/$(arg robot_name)/move_base/parameter_descriptions" />
        <remap from="/move_base/parameter_updates" to="/$(arg robot_name)/move_base/parameter_updates" />
        <remap from="/move_base/result" to="/$(arg robot_name)/move_base/result" />
        <remap from="/move_base/status" to="/$(arg robot_name)/move_base/status" />

        <remap from="/move_base/TebLocalPlannerROS/global_plan" to="/$(arg robot_name)/move_base/TebLocalPlannerROS/global_plan" />
        <remap from="/move_base/TebLocalPlannerROS/local_plan" to="/$(arg robot_name)/move_base/TebLocalPlannerROS/local_plan" />
        <remap from="/move_base/TebLocalPlannerROS/teb_markers" to="/$(arg robot_name)/move_base/TebLocalPlannerROS/teb_markers" />
        <remap from="/move_base/TebLocalPlannerROS/teb_markers_array" to="/$(arg robot_name)/move_base/TebLocalPlannerROS/teb_markers_array" />
        <remap from="/move_base/TebLocalPlannerROS/teb_poses" to="/$(arg robot_name)/move_base/TebLocalPlannerROS/teb_poses" />
        <remap from="/move_base/TebLocalPlannerROS/obstacles" to="/$(arg robot_name)/move_base/TebLocalPlannerROS/obstacles" />
        <remap from="/move_base/TebLocalPlannerROS/parameter_descriptions" to="/$(arg robot_name)/move_base/TebLocalPlannerROS/parameter_descriptions" />
        <remap from="/move_base/TebLocalPlannerROS/parameter_updates" to="/$(arg robot_name)/move_base/TebLocalPlannerROS/parameter_updates" />

        <remap from="/move_base_simple/goal" to="/$(arg robot_name)/move_base_simple/goal" />

    </node>

</launch>
